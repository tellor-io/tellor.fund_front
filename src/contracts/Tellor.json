{
  "contractName": "Tellor",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "theLazyCoon",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_tip",
          "type": "uint256"
        }
      ],
      "name": "addTip",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_c_sapi",
          "type": "string"
        },
        {
          "name": "_c_symbol",
          "type": "string"
        },
        {
          "name": "_granularity",
          "type": "uint256"
        },
        {
          "name": "_tip",
          "type": "uint256"
        }
      ],
      "name": "requestData",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_nonce",
          "type": "string"
        },
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "submitMiningSolution",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_c_sapi\",\"type\":\"string\"},{\"name\":\"_c_symbol\",\"type\":\"string\"},{\"name\":\"_granularity\",\"type\":\"uint256\"},{\"name\":\"_tip\",\"type\":\"uint256\"}],\"name\":\"requestData\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_nonce\",\"type\":\"string\"},{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"submitMiningSolution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_tip\",\"type\":\"uint256\"}],\"name\":\"addTip\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"theLazyCoon\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Oracle contract where miners can submit the proof of work along with the value.\\r The logic for this contract is in TellorLibrary.sol, TellorDispute.sol, TellorStake.sol,\\r and TellorTransfer.sol\\r\",\"methods\":{\"addTip(uint256,uint256)\":{\"details\":\"Add tip to Request value from oracle\\r\",\"params\":{\"_requestId\":\"being requested to be mined\\r\",\"_tip\":\"amount the requester is willing to pay to be get on queue. Miners\\r mine the onDeckQueryHash, or the api with the highest payout pool\\r\"}},\"approve(address,uint256)\":{\"details\":\"This function approves a _spender an _amount of tokens to use\\r\",\"params\":{\"_amount\":\"amount the spender is being approved for\\r\",\"_spender\":\"address\\r\"},\"return\":\"true if spender appproved successfully\\r\"},\"requestData(string,string,uint256,uint256)\":{\"details\":\"Request to retreive value from oracle based on timestamp. The tip is not required to be\\r greater than 0 because there are no tokens in circulation for the initial(genesis) request\\r\",\"params\":{\"_c_sapi\":\"string API being requested be mined\\r\",\"_c_symbol\":\"is the short string symbol for the api request\\r\",\"_granularity\":\"is the number of decimals miners should include on the submitted value\\r\",\"_tip\":\"amount the requester is willing to pay to be get on queue. Miners\\r mine the onDeckQueryHash, or the api with the highest payout pool\\r\"}},\"submitMiningSolution(string,uint256,uint256)\":{\"details\":\"Proof of work is called by the miner when they submit the solution (proof of work and value)\\r\",\"params\":{\"_nonce\":\"uint submitted by miner\\r\",\"_requestId\":\"the apiId being mined\\r\",\"_value\":\"of api query\\r\"}},\"transfer(address,uint256)\":{\"details\":\"Allows for a transfer of tokens to _to\\r\",\"params\":{\"_amount\":\"The amount of tokens to send\\r\",\"_to\":\"The address to send tokens to\\r\"},\"return\":\"true if transfer is successful\\r\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Sends _amount tokens to _to from _from on the condition it\\r is approved by _from\\r\",\"params\":{\"_amount\":\"The amount of tokens to be transferred\\r\",\"_from\":\"The address holding the tokens being transferred\\r\",\"_to\":\"The address of the recipient\\r\"},\"return\":\"True if the transfer was successful\\r\"}},\"title\":\"Tellor Oracle System\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"usingtellor/contracts/testContracts/Tellor.sol\":\"Tellor\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"usingtellor/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x8a70742b1e1ac65d3688b2cec1e38196b2de488a18fe4ba66d241414f9728927\",\"urls\":[\"bzzr://da7ee50784484474f0092241847f2d717450ed12bbaeb4040f47628afee80cfb\"]},\"usingtellor/contracts/libraries/TellorGettersLibrary.sol\":{\"keccak256\":\"0x75a75c865e03d482a5e23d2f5fcdeb4759f271404d320b96ec0f5e712907bab5\",\"urls\":[\"bzzr://1152047300729b5719e6f4ea607844edff7e8353be9fd94e1d10468d3a9f8ed6\"]},\"usingtellor/contracts/libraries/TellorLibrary.sol\":{\"keccak256\":\"0x6d718b9e38862b3db845019511f8b272af3cc2d209112f35ebc944d10eec5649\",\"urls\":[\"bzzr://3b52937a5615f2ea5a43b82a357b90b698863d1736a45d26df26703235237b39\"]},\"usingtellor/contracts/libraries/TellorStorage.sol\":{\"keccak256\":\"0x54607e8b302ce32f7311be680dbcfdbb6d1054d5091f47bcc0544237b42d483c\",\"urls\":[\"bzzr://263f2237829b260b0694f973f229781be7e1e09e30617b40e88959736f7b0f2a\"]},\"usingtellor/contracts/libraries/TellorTransfer.sol\":{\"keccak256\":\"0xb9ad394b89a6314b8b8c1e331fcde96f85635a1428b7c79848a9b39d5879cbe4\",\"urls\":[\"bzzr://5c84c97c0b0fd4b9577ff0e3377335675f84e7febe01e387afdb54ef9c2a3b08\"]},\"usingtellor/contracts/libraries/Utilities.sol\":{\"keccak256\":\"0x70653719f7deda44ce81106e687ad70e56c09c70146e8e70d7ec732f83ba0d6a\",\"urls\":[\"bzzr://0b7a6090a7dd244e28ee3ca27043a88b501854eb17eadc97f1551ff84e2c7202\"]},\"usingtellor/contracts/testContracts/Tellor.sol\":{\"keccak256\":\"0x0ea7a45c630f926c984369a983d50c08402bf6459195b55b2a26e84593a049f6\",\"urls\":[\"bzzr://ea78aa40b4b84fd4fe239e6f68bd1540ccd0e2322996fbd218c9de49bddb5e5c\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610966806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806368c180d51161005b57806368c180d514610250578063752d49a1146102dd578063a9059cbb14610315578063b079f64a1461037b5761007d565b8063095ea7b31461008257806323b872dd146100e85780633fff28161461016e575b600080fd5b6100ce6004803603604081101561009857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506103c9565b604051808215151515815260200191505060405180910390f35b610154600480360360608110156100fe57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061049b565b604051808215151515815260200191505060405180910390f35b61024e6004803603608081101561018457600080fd5b81019080803590602001906401000000008111156101a157600080fd5b8201836020820111156101b357600080fd5b803590602001918460018302840111640100000000831117156101d557600080fd5b9091929391929390803590602001906401000000008111156101f657600080fd5b82018360208201111561020857600080fd5b8035906020019184600183028401116401000000008311171561022a57600080fd5b909192939192939080359060200190929190803590602001909291905050506105a2565b005b6102db6004803603606081101561026657600080fd5b810190808035906020019064010000000081111561028357600080fd5b82018360208201111561029557600080fd5b803590602001918460018302840111640100000000831117156102b757600080fd5b9091929391929390803590602001909291908035906020019092919050505061068c565b005b610313600480360360408110156102f357600080fd5b810190808035906020019092919080359060200190929190505050610740565b005b6103616004803603604081101561032b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107be565b604051808215151515815260200191505060405180910390f35b6103c76004803603604081101561039157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610890565b005b60008073__TellorTransfer________________________63850dcc32909185856040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060206040518083038186803b15801561045857600080fd5b505af415801561046c573d6000803e3d6000fd5b505050506040513d602081101561048257600080fd5b8101908080519060200190929190505050905092915050565b60008073__TellorTransfer________________________63ca50189990918686866040518563ffffffff1660e01b8152600401808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060206040518083038186803b15801561055e57600080fd5b505af4158015610572573d6000803e3d6000fd5b505050506040513d602081101561058857600080fd5b810190808051906020019092919050505090509392505050565b600073__TellorLibrary_________________________6385997bf690918888888888886040518863ffffffff1660e01b81526004018088815260200180602001806020018581526020018481526020018381038352898982818152602001925080828437600081840152601f19601f8201169050808301925050508381038252878782818152602001925080828437600081840152601f19601f820116905080830192505050995050505050505050505060006040518083038186803b15801561066c57600080fd5b505af4158015610680573d6000803e3d6000fd5b50505050505050505050565b600073__TellorLibrary_________________________63a098b5b49091868686866040518663ffffffff1660e01b815260040180868152602001806020018481526020018381526020018281038252868682818152602001925080828437600081840152601f19601f820116905080830192505050965050505050505060006040518083038186803b15801561072257600080fd5b505af4158015610736573d6000803e3d6000fd5b5050505050505050565b600073__TellorLibrary_________________________6302e8f21b909184846040518463ffffffff1660e01b815260040180848152602001838152602001828152602001935050505060006040518083038186803b1580156107a257600080fd5b505af41580156107b6573d6000803e3d6000fd5b505050505050565b60008073__TellorTransfer________________________63c84b96f5909185856040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060206040518083038186803b15801561084d57600080fd5b505af4158015610861573d6000803e3d6000fd5b505050506040513d602081101561087757600080fd5b8101908080519060200190929190505050905092915050565b600073__TellorLibrary_________________________6348656ba6909184846040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060006040518083038186803b15801561091e57600080fd5b505af4158015610932573d6000803e3d6000fd5b50505050505056fea165627a7a72305820b1f7c48bcb22dcef2a55d91c2aa50b37207428d366678541efe82643709203500029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c806368c180d51161005b57806368c180d514610250578063752d49a1146102dd578063a9059cbb14610315578063b079f64a1461037b5761007d565b8063095ea7b31461008257806323b872dd146100e85780633fff28161461016e575b600080fd5b6100ce6004803603604081101561009857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506103c9565b604051808215151515815260200191505060405180910390f35b610154600480360360608110156100fe57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061049b565b604051808215151515815260200191505060405180910390f35b61024e6004803603608081101561018457600080fd5b81019080803590602001906401000000008111156101a157600080fd5b8201836020820111156101b357600080fd5b803590602001918460018302840111640100000000831117156101d557600080fd5b9091929391929390803590602001906401000000008111156101f657600080fd5b82018360208201111561020857600080fd5b8035906020019184600183028401116401000000008311171561022a57600080fd5b909192939192939080359060200190929190803590602001909291905050506105a2565b005b6102db6004803603606081101561026657600080fd5b810190808035906020019064010000000081111561028357600080fd5b82018360208201111561029557600080fd5b803590602001918460018302840111640100000000831117156102b757600080fd5b9091929391929390803590602001909291908035906020019092919050505061068c565b005b610313600480360360408110156102f357600080fd5b810190808035906020019092919080359060200190929190505050610740565b005b6103616004803603604081101561032b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107be565b604051808215151515815260200191505060405180910390f35b6103c76004803603604081101561039157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610890565b005b60008073__TellorTransfer________________________63850dcc32909185856040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060206040518083038186803b15801561045857600080fd5b505af415801561046c573d6000803e3d6000fd5b505050506040513d602081101561048257600080fd5b8101908080519060200190929190505050905092915050565b60008073__TellorTransfer________________________63ca50189990918686866040518563ffffffff1660e01b8152600401808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060206040518083038186803b15801561055e57600080fd5b505af4158015610572573d6000803e3d6000fd5b505050506040513d602081101561058857600080fd5b810190808051906020019092919050505090509392505050565b600073__TellorLibrary_________________________6385997bf690918888888888886040518863ffffffff1660e01b81526004018088815260200180602001806020018581526020018481526020018381038352898982818152602001925080828437600081840152601f19601f8201169050808301925050508381038252878782818152602001925080828437600081840152601f19601f820116905080830192505050995050505050505050505060006040518083038186803b15801561066c57600080fd5b505af4158015610680573d6000803e3d6000fd5b50505050505050505050565b600073__TellorLibrary_________________________63a098b5b49091868686866040518663ffffffff1660e01b815260040180868152602001806020018481526020018381526020018281038252868682818152602001925080828437600081840152601f19601f820116905080830192505050965050505050505060006040518083038186803b15801561072257600080fd5b505af4158015610736573d6000803e3d6000fd5b5050505050505050565b600073__TellorLibrary_________________________6302e8f21b909184846040518463ffffffff1660e01b815260040180848152602001838152602001828152602001935050505060006040518083038186803b1580156107a257600080fd5b505af41580156107b6573d6000803e3d6000fd5b505050505050565b60008073__TellorTransfer________________________63c84b96f5909185856040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060206040518083038186803b15801561084d57600080fd5b505af4158015610861573d6000803e3d6000fd5b505050506040513d602081101561087757600080fd5b8101908080519060200190929190505050905092915050565b600073__TellorLibrary_________________________6348656ba6909184846040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060006040518083038186803b15801561091e57600080fd5b505af4158015610932573d6000803e3d6000fd5b50505050505056fea165627a7a72305820b1f7c48bcb22dcef2a55d91c2aa50b37207428d366678541efe82643709203500029",
  "sourceMap": "692:6942:12:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;692:6942:12;;;;;;;",
  "deployedSourceMap": "692:6942:12:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;692:6942:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6082:135;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6082:135:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6917:157;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6917:157:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3830:195;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3830:195:12;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3830:195:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3830:195:12;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3830:195:12;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3830:195:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3830:195:12;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3830:195:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4281:173;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4281:173:12;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4281:173:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4281:173:12;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4281:173:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3113:109;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3113:109:12;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6438:127;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6438:127:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1183:115;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1183:115:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6082:135;6152:4;6176:6;:14;;;;6191:8;6201:7;6176:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6176:33:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6176:33:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6176:33:12;;;;;;;;;;;;;;;;6169:40;;6082:135;;;;:::o;6917:157::-;7002:4;7026:6;:19;;;;7046:5;7053:3;7058:7;7026:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7026:40:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7026:40:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7026:40:12;;;;;;;;;;;;;;;;7019:47;;6917:157;;;;;:::o;3830:195::-;3959:6;:18;;;;3978:7;;3987:9;;3998:12;4012:4;3959:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3959:58:12;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3959:58:12;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3959:58:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3959:58:12;;;;3830:195;;;;;;:::o;4281:173::-;4391:6;:27;;;;4419:6;;4427:10;4439:6;4391:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4391:55:12;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4391:55:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4391:55:12;;;;4281:173;;;;:::o;3113:109::-;3183:6;:13;;;;3197:10;3209:4;3183:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3183:31:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3183:31:12;;;;3113:109;;:::o;6438:127::-;6504:4;6528:6;:15;;;;6544:3;6549:7;6528:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6528:29:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6528:29:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6528:29:12;;;;;;;;;;;;;;;;6521:36;;6438:127;;;;:::o;1183:115::-;1254:6;:18;;;;1273:8;1282:7;1254:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1254:36:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1254:36:12;;;;1183:115;;:::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\n/**** Tellor Test Contract***/\r\n/*WARNING: This contract excludes mining functions\r\n           This has bee adapted for projects testing Tellor integration\r\n\r\n**/\r\nimport \"../libraries/SafeMath.sol\";\r\nimport \"../libraries/TellorStorage.sol\";\r\nimport \"../libraries/TellorTransfer.sol\";\r\n//import \"./libraries/TellorDispute.sol\";\r\n//import \"./libraries/TellorStake.sol\";\r\nimport \"../libraries/TellorLibrary.sol\";\r\n\r\n/**\r\n * @title Tellor Oracle System\r\n * @dev Oracle contract where miners can submit the proof of work along with the value.\r\n * The logic for this contract is in TellorLibrary.sol, TellorDispute.sol, TellorStake.sol,\r\n * and TellorTransfer.sol\r\n */\r\ncontract Tellor {\r\n    using SafeMath for uint256;\r\n\r\n    //using TellorDispute for TellorStorage.TellorStorageStruct;\r\n    using TellorLibrary for TellorStorage.TellorStorageStruct;\r\n    //using TellorStake for TellorStorage.TellorStorageStruct;\r\n    using TellorTransfer for TellorStorage.TellorStorageStruct;\r\n\r\n    TellorStorage.TellorStorageStruct tellor;\r\n\r\n    /*Functions*/\r\n\r\n    /*This function is NOT part of mainnet deployment. It is a cheat for demo and testing purposes*/\r\n    function theLazyCoon(address _address, uint _amount) public {\r\n        tellor.theLazyCoon(_address,_amount);\r\n    }\r\n\r\n    // /**\r\n    // * @dev Helps initialize a dispute by assigning it a disputeId\r\n    // * when a miner returns a false on the validate array(in Tellor.ProofOfWork) it sends the\r\n    // * invalidated value information to POS voting\r\n    // * @param _requestId being disputed\r\n    // * @param _timestamp being disputed\r\n    // * @param _minerIndex the index of the miner that submitted the value being disputed. Since each official value\r\n    // * requires 5 miners to submit a value.\r\n    // */\r\n    // function beginDispute(uint256 _requestId, uint256 _timestamp, uint256 _minerIndex) external {\r\n    //     tellor.beginDispute(_requestId, _timestamp, _minerIndex);\r\n    // }\r\n\r\n    // *\r\n    // * @dev Allows token holders to vote\r\n    // * @param _disputeId is the dispute id\r\n    // * @param _supportsDispute is the vote (true=the dispute has basis false = vote against dispute)\r\n    \r\n    // function vote(uint256 _disputeId, bool _supportsDispute) external {\r\n    //     tellor.vote(_disputeId, _supportsDispute);\r\n    // }\r\n\r\n    // /**\r\n    // * @dev tallies the votes.\r\n    // * @param _disputeId is the dispute id\r\n    // */\r\n    // function tallyVotes(uint256 _disputeId) external {\r\n    //     tellor.tallyVotes(_disputeId);\r\n    // }\r\n\r\n    // /**\r\n    // * @dev Allows for a fork to be proposed\r\n    // * @param _propNewTellorAddress address for new proposed Tellor\r\n    // */\r\n    // function proposeFork(address _propNewTellorAddress) external {\r\n    //     tellor.proposeFork(_propNewTellorAddress);\r\n    // }\r\n\r\n    /**\r\n    * @dev Add tip to Request value from oracle\r\n    * @param _requestId being requested to be mined\r\n    * @param _tip amount the requester is willing to pay to be get on queue. Miners\r\n    * mine the onDeckQueryHash, or the api with the highest payout pool\r\n    */\r\n    function addTip(uint256 _requestId, uint256 _tip) external {\r\n        tellor.addTip(_requestId, _tip);\r\n    }\r\n\r\n    /**\r\n    * @dev Request to retreive value from oracle based on timestamp. The tip is not required to be\r\n    * greater than 0 because there are no tokens in circulation for the initial(genesis) request\r\n    * @param _c_sapi string API being requested be mined\r\n    * @param _c_symbol is the short string symbol for the api request\r\n    * @param _granularity is the number of decimals miners should include on the submitted value\r\n    * @param _tip amount the requester is willing to pay to be get on queue. Miners\r\n    * mine the onDeckQueryHash, or the api with the highest payout pool\r\n    */\r\n    function requestData(string calldata _c_sapi, string calldata _c_symbol, uint256 _granularity, uint256 _tip) external {\r\n        tellor.requestData(_c_sapi, _c_symbol, _granularity, _tip);\r\n    }\r\n\r\n    /**\r\n    * @dev Proof of work is called by the miner when they submit the solution (proof of work and value)\r\n    * @param _nonce uint submitted by miner\r\n    * @param _requestId the apiId being mined\r\n    * @param _value of api query\r\n    */\r\n    function submitMiningSolution(string calldata _nonce, uint256 _requestId, uint256 _value) external {\r\n        tellor.submitMiningSolution(_nonce, _requestId, _value);\r\n    }\r\n\r\n    // /**\r\n    // * @dev Allows the current owner to propose transfer control of the contract to a\r\n    // * newOwner and the ownership is pending until the new owner calls the claimOwnership\r\n    // * function\r\n    // * @param _pendingOwner The address to transfer ownership to.\r\n    // */\r\n    // function proposeOwnership(address payable _pendingOwner) external {\r\n    //     tellor.proposeOwnership(_pendingOwner);\r\n    // }\r\n\r\n    // /**\r\n    // * @dev Allows the new owner to claim control of the contract\r\n    // */\r\n    // function claimOwnership() external {\r\n    //     tellor.claimOwnership();\r\n    // }\r\n\r\n    // /**\r\n    // * @dev This function allows miners to deposit their stake.\r\n    // */\r\n    // function depositStake() external {\r\n    //     tellor.depositStake();\r\n    // }\r\n\r\n    // *\r\n    // * @dev This function allows stakers to request to withdraw their stake (no longer stake)\r\n    // * once they lock for withdraw(stakes.currentStatus = 2) they are locked for 7 days before they\r\n    // * can withdraw the stake\r\n    \r\n    // function requestStakingWithdraw() external {\r\n    //     tellor.requestStakingWithdraw();\r\n    // }\r\n\r\n    // /**\r\n    // * @dev This function allows users to withdraw their stake after a 7 day waiting period from request\r\n    // */\r\n    // function withdrawStake() external {\r\n    //     tellor.withdrawStake();\r\n    // }\r\n\r\n    /**\r\n    * @dev This function approves a _spender an _amount of tokens to use\r\n    * @param _spender address\r\n    * @param _amount amount the spender is being approved for\r\n    * @return true if spender appproved successfully\r\n    */\r\n    function approve(address _spender, uint256 _amount) external returns (bool) {\r\n        return tellor.approve(_spender, _amount);\r\n    }\r\n\r\n    /**\r\n    * @dev Allows for a transfer of tokens to _to\r\n    * @param _to The address to send tokens to\r\n    * @param _amount The amount of tokens to send\r\n    * @return true if transfer is successful\r\n    */\r\n    function transfer(address _to, uint256 _amount) external returns (bool) {\r\n        return tellor.transfer(_to, _amount);\r\n    }\r\n\r\n    /**\r\n    * @dev Sends _amount tokens to _to from _from on the condition it\r\n    * is approved by _from\r\n    * @param _from The address holding the tokens being transferred\r\n    * @param _to The address of the recipient\r\n    * @param _amount The amount of tokens to be transferred\r\n    * @return True if the transfer was successful\r\n    */\r\n    function transferFrom(address _from, address _to, uint256 _amount) external returns (bool) {\r\n        return tellor.transferFrom(_from, _to, _amount);\r\n    }\r\n\r\n    // /**\r\n    // * @dev Allows users to access the token's name\r\n    // */\r\n    // function name() external pure returns (string memory) {\r\n    //     return \"Tellor Tributes\";\r\n    // }\r\n\r\n    // /**\r\n    // * @dev Allows users to access the token's symbol\r\n    // */\r\n    // function symbol() external pure returns (string memory) {\r\n    //     return \"TRB\";\r\n    // }\r\n\r\n    // /**\r\n    // * @dev Allows users to access the number of decimals\r\n    // */\r\n    // function decimals() external pure returns (uint8) {\r\n    //     return 18;\r\n    // }\r\n\r\n}\r\n",
  "sourcePath": "usingtellor\\contracts\\testContracts\\Tellor.sol",
  "ast": {
    "absolutePath": "usingtellor/contracts/testContracts/Tellor.sol",
    "exportedSymbols": {
      "Tellor": [
        4516
      ]
    },
    "id": 4517,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4380,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:12"
      },
      {
        "absolutePath": "usingtellor/contracts/libraries/SafeMath.sol",
        "file": "../libraries/SafeMath.sol",
        "id": 4381,
        "nodeType": "ImportDirective",
        "scope": 4517,
        "sourceUnit": 2112,
        "src": "191:35:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "usingtellor/contracts/libraries/TellorStorage.sol",
        "file": "../libraries/TellorStorage.sol",
        "id": 4382,
        "nodeType": "ImportDirective",
        "scope": 4517,
        "sourceUnit": 3762,
        "src": "228:40:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "usingtellor/contracts/libraries/TellorTransfer.sol",
        "file": "../libraries/TellorTransfer.sol",
        "id": 4383,
        "nodeType": "ImportDirective",
        "scope": 4517,
        "sourceUnit": 4269,
        "src": "270:41:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "usingtellor/contracts/libraries/TellorLibrary.sol",
        "file": "../libraries/TellorLibrary.sol",
        "id": 4384,
        "nodeType": "ImportDirective",
        "scope": 4517,
        "sourceUnit": 3614,
        "src": "397:40:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Tellor Oracle System\r\n@dev Oracle contract where miners can submit the proof of work along with the value.\r\nThe logic for this contract is in TellorLibrary.sol, TellorDispute.sol, TellorStake.sol,\r\nand TellorTransfer.sol\r",
        "fullyImplemented": true,
        "id": 4516,
        "linearizedBaseContracts": [
          4516
        ],
        "name": "Tellor",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4387,
            "libraryName": {
              "contractScope": null,
              "id": 4385,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2111,
              "src": "721:8:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2111",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "715:27:12",
            "typeName": {
              "id": 4386,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "734:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 4390,
            "libraryName": {
              "contractScope": null,
              "id": 4388,
              "name": "TellorLibrary",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3613,
              "src": "822:13:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TellorLibrary_$3613",
                "typeString": "library TellorLibrary"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "816:58:12",
            "typeName": {
              "contractScope": null,
              "id": 4389,
              "name": "TellorStorage.TellorStorageStruct",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3760,
              "src": "840:33:12",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_TellorStorageStruct_$3760_storage_ptr",
                "typeString": "struct TellorStorage.TellorStorageStruct"
              }
            }
          },
          {
            "id": 4393,
            "libraryName": {
              "contractScope": null,
              "id": 4391,
              "name": "TellorTransfer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4268,
              "src": "950:14:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TellorTransfer_$4268",
                "typeString": "library TellorTransfer"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "944:59:12",
            "typeName": {
              "contractScope": null,
              "id": 4392,
              "name": "TellorStorage.TellorStorageStruct",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3760,
              "src": "969:33:12",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_TellorStorageStruct_$3760_storage_ptr",
                "typeString": "struct TellorStorage.TellorStorageStruct"
              }
            }
          },
          {
            "constant": false,
            "id": 4395,
            "name": "tellor",
            "nodeType": "VariableDeclaration",
            "scope": 4516,
            "src": "1011:40:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_TellorStorageStruct_$3760_storage",
              "typeString": "struct TellorStorage.TellorStorageStruct"
            },
            "typeName": {
              "contractScope": null,
              "id": 4394,
              "name": "TellorStorage.TellorStorageStruct",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3760,
              "src": "1011:33:12",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_TellorStorageStruct_$3760_storage_ptr",
                "typeString": "struct TellorStorage.TellorStorageStruct"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4409,
              "nodeType": "Block",
              "src": "1243:55:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4405,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4397,
                        "src": "1273:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4406,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4399,
                        "src": "1282:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4402,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4395,
                        "src": "1254:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$3760_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 4404,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "theLazyCoon",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2505,
                      "src": "1254:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$3760_storage_ptr_$_t_address_$_t_uint256_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$3760_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,address,uint256)"
                      }
                    },
                    "id": 4407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1254:36:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4408,
                  "nodeType": "ExpressionStatement",
                  "src": "1254:36:12"
                }
              ]
            },
            "documentation": null,
            "id": 4410,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "theLazyCoon",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4397,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 4410,
                  "src": "1204:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4396,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1204:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4399,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4410,
                  "src": "1222:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4398,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1222:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1203:32:12"
            },
            "returnParameters": {
              "id": 4401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1243:0:12"
            },
            "scope": 4516,
            "src": "1183:115:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4424,
              "nodeType": "Block",
              "src": "3172:50:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4420,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4412,
                        "src": "3197:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4421,
                        "name": "_tip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4414,
                        "src": "3209:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4417,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4395,
                        "src": "3183:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$3760_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 4419,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addTip",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2561,
                      "src": "3183:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$3760_storage_ptr_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$3760_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,uint256,uint256)"
                      }
                    },
                    "id": 4422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3183:31:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4423,
                  "nodeType": "ExpressionStatement",
                  "src": "3183:31:12"
                }
              ]
            },
            "documentation": "@dev Add tip to Request value from oracle\r\n@param _requestId being requested to be mined\r\n@param _tip amount the requester is willing to pay to be get on queue. Miners\r\nmine the onDeckQueryHash, or the api with the highest payout pool\r",
            "id": 4425,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addTip",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4412,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 4425,
                  "src": "3129:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4411,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3129:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4414,
                  "name": "_tip",
                  "nodeType": "VariableDeclaration",
                  "scope": 4425,
                  "src": "3149:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4413,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3149:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3128:34:12"
            },
            "returnParameters": {
              "id": 4416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3172:0:12"
            },
            "scope": 4516,
            "src": "3113:109:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4445,
              "nodeType": "Block",
              "src": "3948:77:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4439,
                        "name": "_c_sapi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4427,
                        "src": "3978:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4440,
                        "name": "_c_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4429,
                        "src": "3987:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4441,
                        "name": "_granularity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4431,
                        "src": "3998:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4442,
                        "name": "_tip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4433,
                        "src": "4012:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4436,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4395,
                        "src": "3959:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$3760_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 4438,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requestData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2769,
                      "src": "3959:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$3760_storage_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$3760_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,string memory,string memory,uint256,uint256)"
                      }
                    },
                    "id": 4443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3959:58:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4444,
                  "nodeType": "ExpressionStatement",
                  "src": "3959:58:12"
                }
              ]
            },
            "documentation": "@dev Request to retreive value from oracle based on timestamp. The tip is not required to be\r\ngreater than 0 because there are no tokens in circulation for the initial(genesis) request\r\n@param _c_sapi string API being requested be mined\r\n@param _c_symbol is the short string symbol for the api request\r\n@param _granularity is the number of decimals miners should include on the submitted value\r\n@param _tip amount the requester is willing to pay to be get on queue. Miners\r\nmine the onDeckQueryHash, or the api with the highest payout pool\r",
            "id": 4446,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4427,
                  "name": "_c_sapi",
                  "nodeType": "VariableDeclaration",
                  "scope": 4446,
                  "src": "3851:23:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4426,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3851:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4429,
                  "name": "_c_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 4446,
                  "src": "3876:25:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4428,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3876:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4431,
                  "name": "_granularity",
                  "nodeType": "VariableDeclaration",
                  "scope": 4446,
                  "src": "3903:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3903:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4433,
                  "name": "_tip",
                  "nodeType": "VariableDeclaration",
                  "scope": 4446,
                  "src": "3925:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4432,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3925:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3850:88:12"
            },
            "returnParameters": {
              "id": 4435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3948:0:12"
            },
            "scope": 4516,
            "src": "3830:195:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4463,
              "nodeType": "Block",
              "src": "4380:74:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4458,
                        "name": "_nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4448,
                        "src": "4419:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4459,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4450,
                        "src": "4427:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4460,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4452,
                        "src": "4439:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4455,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4395,
                        "src": "4391:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$3760_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 4457,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "submitMiningSolution",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3325,
                      "src": "4391:27:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$3760_storage_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$3760_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,string memory,uint256,uint256)"
                      }
                    },
                    "id": 4461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4391:55:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4462,
                  "nodeType": "ExpressionStatement",
                  "src": "4391:55:12"
                }
              ]
            },
            "documentation": "@dev Proof of work is called by the miner when they submit the solution (proof of work and value)\r\n@param _nonce uint submitted by miner\r\n@param _requestId the apiId being mined\r\n@param _value of api query\r",
            "id": 4464,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitMiningSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4448,
                  "name": "_nonce",
                  "nodeType": "VariableDeclaration",
                  "scope": 4464,
                  "src": "4311:22:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4447,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4311:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4450,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 4464,
                  "src": "4335:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4449,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4335:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4452,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 4464,
                  "src": "4355:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4451,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4355:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4310:60:12"
            },
            "returnParameters": {
              "id": 4454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4380:0:12"
            },
            "scope": 4516,
            "src": "4281:173:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4479,
              "nodeType": "Block",
              "src": "6158:59:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4475,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4466,
                        "src": "6191:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4476,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4468,
                        "src": "6201:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4473,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4395,
                        "src": "6176:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$3760_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 4474,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3892,
                      "src": "6176:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$3760_storage_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_TellorStorageStruct_$3760_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,address,uint256) returns (bool)"
                      }
                    },
                    "id": 4477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6176:33:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4472,
                  "id": 4478,
                  "nodeType": "Return",
                  "src": "6169:40:12"
                }
              ]
            },
            "documentation": "@dev This function approves a _spender an _amount of tokens to use\r\n@param _spender address\r\n@param _amount amount the spender is being approved for\r\n@return true if spender appproved successfully\r",
            "id": 4480,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4466,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 4480,
                  "src": "6099:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4465,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6099:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4468,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4480,
                  "src": "6117:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4467,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6117:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6098:35:12"
            },
            "returnParameters": {
              "id": 4472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4471,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4480,
                  "src": "6152:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4470,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6152:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6151:6:12"
            },
            "scope": 4516,
            "src": "6082:135:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4495,
              "nodeType": "Block",
              "src": "6510:55:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4491,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4482,
                        "src": "6544:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4492,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4484,
                        "src": "6549:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4489,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4395,
                        "src": "6528:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$3760_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 4490,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3806,
                      "src": "6528:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$3760_storage_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_TellorStorageStruct_$3760_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,address,uint256) returns (bool)"
                      }
                    },
                    "id": 4493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6528:29:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4488,
                  "id": 4494,
                  "nodeType": "Return",
                  "src": "6521:36:12"
                }
              ]
            },
            "documentation": "@dev Allows for a transfer of tokens to _to\r\n@param _to The address to send tokens to\r\n@param _amount The amount of tokens to send\r\n@return true if transfer is successful\r",
            "id": 4496,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4482,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 4496,
                  "src": "6456:11:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4481,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6456:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4484,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4496,
                  "src": "6469:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6469:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6455:30:12"
            },
            "returnParameters": {
              "id": 4488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4487,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4496,
                  "src": "6504:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4486,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6504:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6503:6:12"
            },
            "scope": 4516,
            "src": "6438:127:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4514,
              "nodeType": "Block",
              "src": "7008:66:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4509,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4498,
                        "src": "7046:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4510,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4500,
                        "src": "7053:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4511,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4502,
                        "src": "7058:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4507,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4395,
                        "src": "7026:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$3760_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 4508,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3852,
                      "src": "7026:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$3760_storage_ptr_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_TellorStorageStruct_$3760_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 4512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7026:40:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4506,
                  "id": 4513,
                  "nodeType": "Return",
                  "src": "7019:47:12"
                }
              ]
            },
            "documentation": "@dev Sends _amount tokens to _to from _from on the condition it\r\nis approved by _from\r\n@param _from The address holding the tokens being transferred\r\n@param _to The address of the recipient\r\n@param _amount The amount of tokens to be transferred\r\n@return True if the transfer was successful\r",
            "id": 4515,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4498,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 4515,
                  "src": "6939:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4497,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6939:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4500,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 4515,
                  "src": "6954:11:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4499,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6954:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4502,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4515,
                  "src": "6967:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4501,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6967:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6938:45:12"
            },
            "returnParameters": {
              "id": 4506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4505,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4515,
                  "src": "7002:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4504,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7002:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7001:6:12"
            },
            "scope": 4516,
            "src": "6917:157:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 4517,
        "src": "692:6942:12"
      }
    ],
    "src": "0:7636:12"
  },
  "legacyAST": {
    "absolutePath": "usingtellor/contracts/testContracts/Tellor.sol",
    "exportedSymbols": {
      "Tellor": [
        4516
      ]
    },
    "id": 4517,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4380,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:12"
      },
      {
        "absolutePath": "usingtellor/contracts/libraries/SafeMath.sol",
        "file": "../libraries/SafeMath.sol",
        "id": 4381,
        "nodeType": "ImportDirective",
        "scope": 4517,
        "sourceUnit": 2112,
        "src": "191:35:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "usingtellor/contracts/libraries/TellorStorage.sol",
        "file": "../libraries/TellorStorage.sol",
        "id": 4382,
        "nodeType": "ImportDirective",
        "scope": 4517,
        "sourceUnit": 3762,
        "src": "228:40:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "usingtellor/contracts/libraries/TellorTransfer.sol",
        "file": "../libraries/TellorTransfer.sol",
        "id": 4383,
        "nodeType": "ImportDirective",
        "scope": 4517,
        "sourceUnit": 4269,
        "src": "270:41:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "usingtellor/contracts/libraries/TellorLibrary.sol",
        "file": "../libraries/TellorLibrary.sol",
        "id": 4384,
        "nodeType": "ImportDirective",
        "scope": 4517,
        "sourceUnit": 3614,
        "src": "397:40:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Tellor Oracle System\r\n@dev Oracle contract where miners can submit the proof of work along with the value.\r\nThe logic for this contract is in TellorLibrary.sol, TellorDispute.sol, TellorStake.sol,\r\nand TellorTransfer.sol\r",
        "fullyImplemented": true,
        "id": 4516,
        "linearizedBaseContracts": [
          4516
        ],
        "name": "Tellor",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4387,
            "libraryName": {
              "contractScope": null,
              "id": 4385,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2111,
              "src": "721:8:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2111",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "715:27:12",
            "typeName": {
              "id": 4386,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "734:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 4390,
            "libraryName": {
              "contractScope": null,
              "id": 4388,
              "name": "TellorLibrary",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3613,
              "src": "822:13:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TellorLibrary_$3613",
                "typeString": "library TellorLibrary"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "816:58:12",
            "typeName": {
              "contractScope": null,
              "id": 4389,
              "name": "TellorStorage.TellorStorageStruct",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3760,
              "src": "840:33:12",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_TellorStorageStruct_$3760_storage_ptr",
                "typeString": "struct TellorStorage.TellorStorageStruct"
              }
            }
          },
          {
            "id": 4393,
            "libraryName": {
              "contractScope": null,
              "id": 4391,
              "name": "TellorTransfer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4268,
              "src": "950:14:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TellorTransfer_$4268",
                "typeString": "library TellorTransfer"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "944:59:12",
            "typeName": {
              "contractScope": null,
              "id": 4392,
              "name": "TellorStorage.TellorStorageStruct",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3760,
              "src": "969:33:12",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_TellorStorageStruct_$3760_storage_ptr",
                "typeString": "struct TellorStorage.TellorStorageStruct"
              }
            }
          },
          {
            "constant": false,
            "id": 4395,
            "name": "tellor",
            "nodeType": "VariableDeclaration",
            "scope": 4516,
            "src": "1011:40:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_TellorStorageStruct_$3760_storage",
              "typeString": "struct TellorStorage.TellorStorageStruct"
            },
            "typeName": {
              "contractScope": null,
              "id": 4394,
              "name": "TellorStorage.TellorStorageStruct",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3760,
              "src": "1011:33:12",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_TellorStorageStruct_$3760_storage_ptr",
                "typeString": "struct TellorStorage.TellorStorageStruct"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4409,
              "nodeType": "Block",
              "src": "1243:55:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4405,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4397,
                        "src": "1273:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4406,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4399,
                        "src": "1282:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4402,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4395,
                        "src": "1254:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$3760_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 4404,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "theLazyCoon",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2505,
                      "src": "1254:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$3760_storage_ptr_$_t_address_$_t_uint256_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$3760_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,address,uint256)"
                      }
                    },
                    "id": 4407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1254:36:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4408,
                  "nodeType": "ExpressionStatement",
                  "src": "1254:36:12"
                }
              ]
            },
            "documentation": null,
            "id": 4410,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "theLazyCoon",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4397,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 4410,
                  "src": "1204:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4396,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1204:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4399,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4410,
                  "src": "1222:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4398,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1222:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1203:32:12"
            },
            "returnParameters": {
              "id": 4401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1243:0:12"
            },
            "scope": 4516,
            "src": "1183:115:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4424,
              "nodeType": "Block",
              "src": "3172:50:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4420,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4412,
                        "src": "3197:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4421,
                        "name": "_tip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4414,
                        "src": "3209:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4417,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4395,
                        "src": "3183:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$3760_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 4419,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addTip",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2561,
                      "src": "3183:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$3760_storage_ptr_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$3760_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,uint256,uint256)"
                      }
                    },
                    "id": 4422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3183:31:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4423,
                  "nodeType": "ExpressionStatement",
                  "src": "3183:31:12"
                }
              ]
            },
            "documentation": "@dev Add tip to Request value from oracle\r\n@param _requestId being requested to be mined\r\n@param _tip amount the requester is willing to pay to be get on queue. Miners\r\nmine the onDeckQueryHash, or the api with the highest payout pool\r",
            "id": 4425,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addTip",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4412,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 4425,
                  "src": "3129:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4411,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3129:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4414,
                  "name": "_tip",
                  "nodeType": "VariableDeclaration",
                  "scope": 4425,
                  "src": "3149:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4413,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3149:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3128:34:12"
            },
            "returnParameters": {
              "id": 4416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3172:0:12"
            },
            "scope": 4516,
            "src": "3113:109:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4445,
              "nodeType": "Block",
              "src": "3948:77:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4439,
                        "name": "_c_sapi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4427,
                        "src": "3978:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4440,
                        "name": "_c_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4429,
                        "src": "3987:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4441,
                        "name": "_granularity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4431,
                        "src": "3998:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4442,
                        "name": "_tip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4433,
                        "src": "4012:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4436,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4395,
                        "src": "3959:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$3760_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 4438,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requestData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2769,
                      "src": "3959:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$3760_storage_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$3760_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,string memory,string memory,uint256,uint256)"
                      }
                    },
                    "id": 4443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3959:58:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4444,
                  "nodeType": "ExpressionStatement",
                  "src": "3959:58:12"
                }
              ]
            },
            "documentation": "@dev Request to retreive value from oracle based on timestamp. The tip is not required to be\r\ngreater than 0 because there are no tokens in circulation for the initial(genesis) request\r\n@param _c_sapi string API being requested be mined\r\n@param _c_symbol is the short string symbol for the api request\r\n@param _granularity is the number of decimals miners should include on the submitted value\r\n@param _tip amount the requester is willing to pay to be get on queue. Miners\r\nmine the onDeckQueryHash, or the api with the highest payout pool\r",
            "id": 4446,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4427,
                  "name": "_c_sapi",
                  "nodeType": "VariableDeclaration",
                  "scope": 4446,
                  "src": "3851:23:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4426,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3851:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4429,
                  "name": "_c_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 4446,
                  "src": "3876:25:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4428,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3876:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4431,
                  "name": "_granularity",
                  "nodeType": "VariableDeclaration",
                  "scope": 4446,
                  "src": "3903:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3903:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4433,
                  "name": "_tip",
                  "nodeType": "VariableDeclaration",
                  "scope": 4446,
                  "src": "3925:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4432,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3925:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3850:88:12"
            },
            "returnParameters": {
              "id": 4435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3948:0:12"
            },
            "scope": 4516,
            "src": "3830:195:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4463,
              "nodeType": "Block",
              "src": "4380:74:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4458,
                        "name": "_nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4448,
                        "src": "4419:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4459,
                        "name": "_requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4450,
                        "src": "4427:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4460,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4452,
                        "src": "4439:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4455,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4395,
                        "src": "4391:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$3760_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 4457,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "submitMiningSolution",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3325,
                      "src": "4391:27:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$3760_storage_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_TellorStorageStruct_$3760_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,string memory,uint256,uint256)"
                      }
                    },
                    "id": 4461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4391:55:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4462,
                  "nodeType": "ExpressionStatement",
                  "src": "4391:55:12"
                }
              ]
            },
            "documentation": "@dev Proof of work is called by the miner when they submit the solution (proof of work and value)\r\n@param _nonce uint submitted by miner\r\n@param _requestId the apiId being mined\r\n@param _value of api query\r",
            "id": 4464,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitMiningSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4448,
                  "name": "_nonce",
                  "nodeType": "VariableDeclaration",
                  "scope": 4464,
                  "src": "4311:22:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4447,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4311:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4450,
                  "name": "_requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 4464,
                  "src": "4335:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4449,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4335:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4452,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 4464,
                  "src": "4355:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4451,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4355:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4310:60:12"
            },
            "returnParameters": {
              "id": 4454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4380:0:12"
            },
            "scope": 4516,
            "src": "4281:173:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4479,
              "nodeType": "Block",
              "src": "6158:59:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4475,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4466,
                        "src": "6191:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4476,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4468,
                        "src": "6201:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4473,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4395,
                        "src": "6176:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$3760_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 4474,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3892,
                      "src": "6176:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$3760_storage_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_TellorStorageStruct_$3760_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,address,uint256) returns (bool)"
                      }
                    },
                    "id": 4477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6176:33:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4472,
                  "id": 4478,
                  "nodeType": "Return",
                  "src": "6169:40:12"
                }
              ]
            },
            "documentation": "@dev This function approves a _spender an _amount of tokens to use\r\n@param _spender address\r\n@param _amount amount the spender is being approved for\r\n@return true if spender appproved successfully\r",
            "id": 4480,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4466,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 4480,
                  "src": "6099:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4465,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6099:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4468,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4480,
                  "src": "6117:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4467,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6117:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6098:35:12"
            },
            "returnParameters": {
              "id": 4472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4471,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4480,
                  "src": "6152:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4470,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6152:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6151:6:12"
            },
            "scope": 4516,
            "src": "6082:135:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4495,
              "nodeType": "Block",
              "src": "6510:55:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4491,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4482,
                        "src": "6544:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4492,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4484,
                        "src": "6549:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4489,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4395,
                        "src": "6528:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$3760_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 4490,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3806,
                      "src": "6528:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$3760_storage_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_TellorStorageStruct_$3760_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,address,uint256) returns (bool)"
                      }
                    },
                    "id": 4493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6528:29:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4488,
                  "id": 4494,
                  "nodeType": "Return",
                  "src": "6521:36:12"
                }
              ]
            },
            "documentation": "@dev Allows for a transfer of tokens to _to\r\n@param _to The address to send tokens to\r\n@param _amount The amount of tokens to send\r\n@return true if transfer is successful\r",
            "id": 4496,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4482,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 4496,
                  "src": "6456:11:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4481,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6456:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4484,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4496,
                  "src": "6469:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6469:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6455:30:12"
            },
            "returnParameters": {
              "id": 4488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4487,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4496,
                  "src": "6504:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4486,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6504:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6503:6:12"
            },
            "scope": 4516,
            "src": "6438:127:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4514,
              "nodeType": "Block",
              "src": "7008:66:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4509,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4498,
                        "src": "7046:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4510,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4500,
                        "src": "7053:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4511,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4502,
                        "src": "7058:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4507,
                        "name": "tellor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4395,
                        "src": "7026:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TellorStorageStruct_$3760_storage",
                          "typeString": "struct TellorStorage.TellorStorageStruct storage ref"
                        }
                      },
                      "id": 4508,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3852,
                      "src": "7026:19:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_TellorStorageStruct_$3760_storage_ptr_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_TellorStorageStruct_$3760_storage_ptr_$",
                        "typeString": "function (struct TellorStorage.TellorStorageStruct storage pointer,address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 4512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7026:40:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4506,
                  "id": 4513,
                  "nodeType": "Return",
                  "src": "7019:47:12"
                }
              ]
            },
            "documentation": "@dev Sends _amount tokens to _to from _from on the condition it\r\nis approved by _from\r\n@param _from The address holding the tokens being transferred\r\n@param _to The address of the recipient\r\n@param _amount The amount of tokens to be transferred\r\n@return True if the transfer was successful\r",
            "id": 4515,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4498,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 4515,
                  "src": "6939:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4497,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6939:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4500,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 4515,
                  "src": "6954:11:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4499,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6954:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4502,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4515,
                  "src": "6967:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4501,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6967:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6938:45:12"
            },
            "returnParameters": {
              "id": 4506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4505,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4515,
                  "src": "7002:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4504,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7002:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7001:6:12"
            },
            "scope": 4516,
            "src": "6917:157:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 4517,
        "src": "692:6942:12"
      }
    ],
    "src": "0:7636:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "1581691961714": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0xd32134405b68f6f7220f9c38ae310df1b648d16188006768d45be2f7c24e8820": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_tip",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_totalTips",
              "type": "uint256"
            }
          ],
          "name": "TipAdded",
          "type": "event",
          "signature": "0xd32134405b68f6f7220f9c38ae310df1b648d16188006768d45be2f7c24e8820"
        },
        "0x6d7f869757848b19c8c2456e95cd98885bc6bed062fda4077bb07985e2f76cc9": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_sender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_query",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_querySymbol",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_granularity",
              "type": "uint256"
            },
            {
              "indexed": true,
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_totalTips",
              "type": "uint256"
            }
          ],
          "name": "DataRequested",
          "type": "event",
          "signature": "0x6d7f869757848b19c8c2456e95cd98885bc6bed062fda4077bb07985e2f76cc9"
        },
        "0x9e959738f09af22daede9ff9563f8edf3f5cec8e17ce60287c911c95fa767f42": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_currentChallenge",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "name": "_currentRequestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_difficulty",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_multiplier",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_query",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_totalTips",
              "type": "uint256"
            }
          ],
          "name": "NewChallenge",
          "type": "event",
          "signature": "0x9e959738f09af22daede9ff9563f8edf3f5cec8e17ce60287c911c95fa767f42"
        },
        "0x5ab383fe3e28263c839564bc7545520a7dd34b78cbd7ab21b2da5d2fd027bf6c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_query",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_onDeckQueryHash",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "_onDeckTotalTips",
              "type": "uint256"
            }
          ],
          "name": "NewRequestOnDeck",
          "type": "event",
          "signature": "0x5ab383fe3e28263c839564bc7545520a7dd34b78cbd7ab21b2da5d2fd027bf6c"
        },
        "0xc509d04e0782579ee59912139246ccbdf6c36c43abd90591d912017f3467dd16": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_time",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_value",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_totalTips",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_currentChallenge",
              "type": "bytes32"
            }
          ],
          "name": "NewValue",
          "type": "event",
          "signature": "0xc509d04e0782579ee59912139246ccbdf6c36c43abd90591d912017f3467dd16"
        },
        "0xe6d63a2aee0aaed2ab49702313ce54114f2145af219d7db30d6624af9e6dffc4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_miner",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_nonce",
              "type": "string"
            },
            {
              "indexed": true,
              "name": "_requestId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_value",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_currentChallenge",
              "type": "bytes32"
            }
          ],
          "name": "NonceSubmitted",
          "type": "event",
          "signature": "0xe6d63a2aee0aaed2ab49702313ce54114f2145af219d7db30d6624af9e6dffc4"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        },
        "0xb51454ce8c7f26becd312a46c4815553887f2ec876a0b8dc813b87f62edf6f80": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipProposed",
          "type": "event",
          "signature": "0xb51454ce8c7f26becd312a46c4815553887f2ec876a0b8dc813b87f62edf6f80"
        }
      },
      "links": {
        "TellorTransfer": "0x08B1D7da9005dfb02631a2ff6bd867bE293B2c24",
        "TellorLibrary": "0x3b205ECF7C4Ef742b2a3BdBf416B4f4D0001622c"
      },
      "address": "0x7Bd8a3E4f9Aa7F873DEBDcA1861DE8e83517C2D5",
      "transactionHash": "0x3996e0320f53bbc527bfa9008e75ba8213972076dbba95e377144a78573df8e9"
    }
  },
  "schemaVersion": "3.0.16",
  "updatedAt": "2020-02-14T14:54:37.776Z",
  "devdoc": {
    "details": "Oracle contract where miners can submit the proof of work along with the value.\r The logic for this contract is in TellorLibrary.sol, TellorDispute.sol, TellorStake.sol,\r and TellorTransfer.sol\r",
    "methods": {
      "addTip(uint256,uint256)": {
        "details": "Add tip to Request value from oracle\r",
        "params": {
          "_requestId": "being requested to be mined\r",
          "_tip": "amount the requester is willing to pay to be get on queue. Miners\r mine the onDeckQueryHash, or the api with the highest payout pool\r"
        }
      },
      "approve(address,uint256)": {
        "details": "This function approves a _spender an _amount of tokens to use\r",
        "params": {
          "_amount": "amount the spender is being approved for\r",
          "_spender": "address\r"
        },
        "return": "true if spender appproved successfully\r"
      },
      "requestData(string,string,uint256,uint256)": {
        "details": "Request to retreive value from oracle based on timestamp. The tip is not required to be\r greater than 0 because there are no tokens in circulation for the initial(genesis) request\r",
        "params": {
          "_c_sapi": "string API being requested be mined\r",
          "_c_symbol": "is the short string symbol for the api request\r",
          "_granularity": "is the number of decimals miners should include on the submitted value\r",
          "_tip": "amount the requester is willing to pay to be get on queue. Miners\r mine the onDeckQueryHash, or the api with the highest payout pool\r"
        }
      },
      "submitMiningSolution(string,uint256,uint256)": {
        "details": "Proof of work is called by the miner when they submit the solution (proof of work and value)\r",
        "params": {
          "_nonce": "uint submitted by miner\r",
          "_requestId": "the apiId being mined\r",
          "_value": "of api query\r"
        }
      },
      "transfer(address,uint256)": {
        "details": "Allows for a transfer of tokens to _to\r",
        "params": {
          "_amount": "The amount of tokens to send\r",
          "_to": "The address to send tokens to\r"
        },
        "return": "true if transfer is successful\r"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Sends _amount tokens to _to from _from on the condition it\r is approved by _from\r",
        "params": {
          "_amount": "The amount of tokens to be transferred\r",
          "_from": "The address holding the tokens being transferred\r",
          "_to": "The address of the recipient\r"
        },
        "return": "True if the transfer was successful\r"
      }
    },
    "title": "Tellor Oracle System\r"
  },
  "userdoc": {
    "methods": {}
  }
}